@inject ResidualKnowledgeTestApp.Client.Services.ICheckingDisciplinesService ProjectsService

<div style="max-width: 1000px;">
    <MudTable Items="@ProjectsService.CheckingDisciplines"
              Hover="true"
              Dense="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Загруженные данные для каждой дисциплины</MudText>
            <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                           OnClick="() => 
                                    { 
                                        Editing = true;
                                        EditingChanged.InvokeAsync(Editing); 
                                    }" 
                           Class="ma-2" />
        </ToolBarContent>
        <HeaderContent>
            <MudTh>
                Дисциплина
            </MudTh>
            <MudTh>
                Результаты промежуточной аттестации
            </MudTh>
            <MudTh>
                Ответы студентов MS Forms
            </MudTh>
            <MudTh>
                Тест с вопросами и ответами
            </MudTh>
            <MudTh>
                Шкала оценивания
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Дисциплинаи">
                [@context.Discipline.DisciplineCode] @context.Discipline.DisciplineName
            </MudTd>
            <MudTd DataLabel="Результаты промежуточной аттестации">
                @if (string.IsNullOrEmpty(context.MidCerificationResultsPath))
                {
                    <MudIcon Icon="@Icons.Material.Filled.Close" Color="Color.Error" Class="ma-2" />
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Success" Class="ma-2" />
                }
            </MudTd>
            <MudTd DataLabel="Ответы студентов MS Forms">
                @if (string.IsNullOrEmpty(context.MsFormsPath))
                {
                    <MudIcon Icon="@Icons.Material.Filled.Close" Color="Color.Error" Class="ma-2" />
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Success" Class="ma-2" />
                }
            </MudTd>
            <MudTd DataLabel="Тест с вопросами и ответами">
                @if (string.IsNullOrEmpty(context.TxtTestFormPath))
                {
                    <MudIcon Icon="@Icons.Material.Filled.Close" Color="Color.Error" Class="ma-2" />
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Success" Class="ma-2" />
                }
            </MudTd>
            <MudTd DataLabel="Код программы">"TODO"</MudTd>
        </RowTemplate>
    </MudTable>
</div>

@code
{
    [Parameter]
    public bool Editing { get; set; }

    [Parameter]
    public EventCallback<bool> EditingChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ProjectsService.GetCheckingDisciplines();
    }
}